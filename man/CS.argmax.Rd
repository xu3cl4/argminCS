% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct_confidence_set.R
\name{CS.argmax}
\alias{CS.argmax}
\title{Construct a discrete confidence set for argmax.}
\usage{
CS.argmax(data, method = "softmin.LOO", alpha = 0.05, ...)
}
\arguments{
\item{data}{A \eqn{n \times p} data matrix; each row is a p-dimensional sample.}

\item{method}{A string indicating the method used to construct the confidence set.
Defaults to \code{'softmin.LOO'}. Can use abbreviations: \code{'SML'}, \code{'HML'}, \code{'NS'},
\code{'MT'}, \code{'GTA'}, \code{'FCHK'}.}

\item{alpha}{The significance level; defaults to 0.05.}

\item{...}{Additional arguments passed to relevant testing functions, such as \code{argmin.HT.LOO},
\code{argmin.HT.gupta}, etc.}
}
\value{
A vector of indices (1-based) representing the \eqn{1 - \alpha} confidence set for the argmax.
}
\description{
This function constructs a \eqn{1 - \alpha} confidence set for the argmax.
It reuses \code{\link{CS.argmin}} machinery by negating the data.
}
\details{
The supported methods include:\tabular{ll}{
   \code{softmin.LOO (SML)} \tab Leave-one-out algorithm using exponential weighting. \cr
   \code{argmin.LOO (HML)} \tab A variant of SML using hard argmin instead of soft weights. \cr
   \code{nonsplit (NS)} \tab SML variant without data splitting. Requires a fixed lambda. \cr
   \code{Bonferroni (MT)} \tab Multiple testing with Bonferroni correction. \cr
   \code{Gupta (GTA)} \tab The method from \insertCite{gupta.1965;textual}{argminCS}. \cr
   \code{Futschik (FCHK)} \tab A two-step method from \insertCite{futschik.1995;textual}{argminCS}. \cr
}
}
\examples{
set.seed(123)
n <- 200; p <- 10
mu <- (1:p) / p
data <- MASS::mvrnorm(n, mu, diag(p))
CS.argmax(data, method = 'SML')

# With Gupta
CS.argmax(data, method = 'GTA')
}
